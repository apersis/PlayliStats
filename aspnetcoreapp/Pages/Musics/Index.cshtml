@page
@model aspnetcoreapp.Pages_Musics.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Nombre de sons par artistes</h1>

<div class="col-lg-2 col-sm-2 col-xs-4">
    <div class="btn-group pull-right bg-clean whith-text">
        <button type="button" class="btn btn-default dropdown-toggle whith-text" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Filtrer par <span class="caret"></span>
        </button>
        <ul class="dropdown-menu ">
            <li><a onclick="getProductsAndRender('views')">
                    <i class="cv cvicon-cv-liked"></i>
                    Artiste
                </a>
            </li>
            <li><a onclick="getProductsAndRender('date')">
                    <i class="cv cvicon-cv-calender"></i>
                    Nombre de Sons
                </a>
            </li>
        </ul>
    </div>
    <div class="clearfix"></div>
</div>
<div>
    <form class="filter">
        <p id="filterBy" style="cursor: pointer;">
            Filtrer par <span class="caret"></span>
        </p>
        <div id="buttonContainer" style="display: none;">
            <button>
                Artiste
            </button>
            <button>
                Nombre de sons
            </button>
        </div>
    </form>
</div>

<script>
    // Récupère le paragraphe et le conteneur des boutons
    const paragraph = document.getElementById('filterBy');
    const buttonContainer = document.getElementById('buttonContainer');

    // Ajoute un écouteur d'événement pour le clic sur le paragraphe
    paragraph.addEventListener('click', function() {
        // Change le display du conteneur des boutons pour les afficher
        if (buttonContainer.style.display == 'none')
        {
            buttonContainer.style.display = 'block';
        }else{
            buttonContainer.style.display = 'none';
        }
    });
</script>

<div class="multiTable">
@{
    foreach (var item in Model.obsArtistInfo){
        <div class="vignette">
            <div class="vignette-text">
                <h3 class="text-overlay">
                    @Html.DisplayFor(modelItem => item.name)
                </h3>
            </div>
            <div class="background-image" style="background-image: url('@Html.DisplayFor(modelItem => item.coverUrl)');">
                <h3 class="text-overlay">
                    @Html.DisplayFor(modelItem => item.nbrSons)
                </h3>
            </div>
        </div>

    }
}
</div>
