@page
@model aspnetcoreapp.Pages_Musics.IndexModel

@{
    ViewData["Title"] = "Index";
}


<div class="titre-music">
    <h1>Nombre de sons par artistes</h1>
    <form class="filter">
        <p id="filter-by">
            Trier par <span class="caret"></span>
        </p>
        <div id="button-container">
            <button>
                Artiste (A-Z)
            </button>
            <button>
                Artiste (Z-A)
            </button>
            <button>
                Nombre de sons Asc
            </button>
            <button>
                Nombre de sons Desc
            </button>
        </div>
    </form>
</div>

<div class="multiTable">
@{
    foreach (var item in Model.obsArtistInfo){
        <div class="vignette">
            <div class="vignette-text">
                <h3 class="text-overlay">
                    @Html.DisplayFor(modelItem => item.name)
                </h3>
            </div>
            <div class="background-image" style="background-image: url('@Html.DisplayFor(modelItem => item.coverUrl)');">
                <div class="pastille">
                    <h3 class="text-overlay">
                        @Html.DisplayFor(modelItem => item.nbrSons)
                    </h3>
                </div>
            </div>
        </div>

    }
}
</div>


<script>
    // Récupère le paragraphe et le conteneur des boutons
    const paragraph = document.getElementById('filter-by');
    const buttonContainer = document.getElementById('button-container');

    // Ajoute un écouteur d'événement pour le clic sur le paragraphe
    paragraph.addEventListener('click', function() {
        // Change le display du conteneur des boutons pour les afficher
        if (buttonContainer.style.visibility == 'hidden')
        {
            buttonContainer.style.visibility = 'visible';
        }else{
            buttonContainer.style.visibility = 'hidden';
        }
    });
</script>